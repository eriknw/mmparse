from mm import mmread

def test_mm_read_pattern():
    with mmread('test_data/karate.mtx') as r:
        header, row_iter = r
        assert header == {'mm_format': 'coordinate', 'mm_type':
                          'pattern', 'mm_storage': 'symmetric', 'nrows': 34, 'ncols':
                          34, 'nvals': 78}
        assert list(row_iter) ==  [
            (23, 2, 1, True), (24, 3, 1, True), (25, 4, 1, True), (26, 5, 1, True),
            (27, 6, 1, True), (28, 7, 1, True), (29, 8, 1, True), (30, 9, 1, True),
            (31, 11, 1, True), (32, 12, 1, True), (33, 13, 1, True), (34, 14, 1, True),
            (35, 18, 1, True), (36, 20, 1, True), (37, 22, 1, True), (38, 32, 1, True),
            (39, 3, 2, True), (40, 4, 2, True), (41, 8, 2, True), (42, 14, 2, True),
            (43, 18, 2, True), (44, 20, 2, True), (45, 22, 2, True), (46, 31, 2, True),
            (47, 4, 3, True), (48, 8, 3, True), (49, 9, 3, True), (50, 10, 3, True),
            (51, 14, 3, True), (52, 28, 3, True), (53, 29, 3, True), (54, 33, 3, True),
            (55, 8, 4, True), (56, 13, 4, True), (57, 14, 4, True), (58, 7, 5, True),
            (59, 11, 5, True), (60, 7, 6, True), (61, 11, 6, True), (62, 17, 6, True),
            (63, 17, 7, True), (64, 31, 9, True), (65, 33, 9, True), (66, 34, 9, True),
            (67, 34, 10, True), (68, 34, 14, True), (69, 33, 15, True), (70, 34, 15, True),
            (71, 33, 16, True), (72, 34, 16, True), (73, 33, 19, True), (74, 34, 19, True),
            (75, 34, 20, True), (76, 33, 21, True), (77, 34, 21, True), (78, 33, 23, True),
            (79, 34, 23, True), (80, 26, 24, True), (81, 28, 24, True), (82, 30, 24, True),
            (83, 33, 24, True), (84, 34, 24, True), (85, 26, 25, True), (86, 28, 25, True),
            (87, 32, 25, True), (88, 32, 26, True), (89, 30, 27, True), (90, 34, 27, True),
            (91, 34, 28, True), (92, 32, 29, True), (93, 34, 29, True), (94, 33, 30, True),
            (95, 34, 30, True), (96, 33, 31, True), (97, 34, 31, True), (98, 33, 32, True),
            (99, 34, 32, True), (100, 34, 33, True)]


def test_mm_read_real():
    with mmread('test_data/bcsstm03.mtx') as r:
        header, row_iter = r
        
        assert header == {'mm_format': 'coordinate', 'mm_type':
                          'real', 'mm_storage': 'symmetric', 'nrows': 112, 'ncols': 112,
                          'nvals': 112}
        
        assert list(row_iter) ==  [
            (13, 1, 1, 28.0), (14, 2, 2, 28.0), (15, 3, 3, 4763.0), (16, 4, 4, 4763.0),
            (17, 5, 5, 0.2154813635), (18, 6, 6, 0.2154813635), (19, 7, 7, 0.0), (20, 8, 8, 0.0),
            (21, 9, 9, 0.5202101735), (22, 10, 10, 0.5202101735), (23, 11, 11, 0.0), (24, 12, 12, 0.0),
            (25, 13, 13, 0.60945762), (26, 14, 14, 0.60945762), (27, 15, 15, 0.0), (28, 16, 16, 0.0),
            (29, 17, 17, 0.60945762), (30, 18, 18, 0.60945762), (31, 19, 19, 0.0), (32, 20, 20, 0.0),
            (33, 21, 21, 0.60945762), (34, 22, 22, 0.60945762), (35, 23, 23, 0.0), (36, 24, 24, 0.0),
            (37, 25, 25, 0.60945762), (38, 26, 26, 0.60945762), (39, 27, 27, 0.0), (40, 28, 28, 0.0),
            (41, 29, 29, 1.0944223725), (42, 30, 30, 1.0944223725), (43, 31, 31, 0.0), (44, 32, 32, 0.0),
            (45, 33, 33, 0.9142063921), (46, 34, 34, 0.9142063921), (47, 35, 35, 0.0), (48, 36, 36, 0.0),
            (49, 37, 37, 2.3518140046), (50, 38, 38, 2.3518140046), (51, 39, 39, 0.0), (52, 40, 40, 0.0),
            (53, 41, 41, 2.58289689525), (54, 42, 42, 2.58289689525), (55, 43, 43, 0.0),
            (56, 44, 44, 0.0), (57, 45, 45, 4.0640961375), (58, 46, 46, 4.0640961375), (59, 47, 47, 27.42),
            (60, 48, 48, 27.42), (61, 49, 49, 6.84907905475), (62, 50, 50, 6.84907905475), (63, 51, 51, 0.0),
            (64, 52, 52, 0.0), (65, 53, 53, 5.1715672875), (66, 54, 54, 5.1715672875), (67, 55, 55, 0.0),
            (68, 56, 56, 0.0), (69, 57, 57, 3.5458184375), (70, 58, 58, 3.5458184375), (71, 59, 59, 24.78),
            (72, 60, 60, 24.78), (73, 61, 61, 2.7621511875), (74, 62, 62, 2.7621511875), (75, 63, 63, 0.0),
            (76, 64, 64, 0.0), (77, 65, 65, 1.8956859), (78, 66, 66, 1.8956859), (79, 67, 67, 0.0),
            (80, 68, 68, 0.0), (81, 69, 69, 2.876729), (82, 70, 70, 2.876729), (83, 71, 71, 20.72),
            (84, 72, 72, 20.72), (85, 73, 73, 1.8224085), (86, 74, 74, 1.8224085), (87, 75, 75, 0.0),
            (88, 76, 76, 0.0), (89, 77, 77, 2.26357691), (90, 78, 78, 2.26357691), (91, 79, 79, 18.28),
            (92, 80, 80, 18.28), (93, 81, 81, 3.235700691), (94, 82, 82, 3.235700691), (95, 83, 83, 0.0),
            (96, 84, 84, 0.0), (97, 85, 85, 4.39567529), (98, 86, 86, 4.39567529), (99, 87, 87, 0.0),
            (100, 88, 88, 0.0), (101, 89, 89, 2.310394609), (102, 90, 90, 2.310394609), (103, 91, 91, 2.29),
            (104, 92, 92, 2.29), (105, 93, 93, 1.54279626), (106, 94, 94, 1.54279626), (107, 95, 95, 42.31),
            (108, 96, 96, 42.31), (109, 97, 97, 0.44042214), (110, 98, 98, 0.44042214), (111, 99, 99, 0.0),
            (112, 100, 100, 0.0), (113, 101, 101, 13.71235058), (114, 102, 102, 13.71235058), (115, 103, 103, 5403.5),
            (116, 104, 104, 5403.5), (117, 105, 105, 0.37728736), (118, 106, 106, 0.37728736), (119, 107, 107, 0.0),
            (120, 108, 108, 0.0), (121, 109, 109, 0.10344976), (122, 110, 110, 0.10344976), (123, 111, 111, 0.0),
            (124, 112, 112, 0.0)]
